{"version":3,"file":"AppWebsocket.mock.js","sourceRoot":"","sources":["../src/AppWebsocket.mock.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,SAAS,CAAC;AAMrC,MAAM,OAAO,gBAAgB;IAG3B,YAAsB,OAAoB,EAAY,KAAkB;QAAlD,YAAO,GAAP,OAAO,CAAa;QAAY,UAAK,GAAL,KAAK,CAAa;QAFxE,cAAS,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;IAEiB,CAAC;IAE5E,KAAK,CAAC,OAAO;QACX,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,IAOd;QACC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAC7C,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,UAAU,CAChB,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { AgentPubKey, CellId } from \"@holochain/conductor-api\";\nimport { randomHash } from \"./utils\";\n\nexport type MockedZomes = {\n  [zome_name: string]: any;\n};\n\nexport class AppWebsocketMock {\n  cell_data = [[[this.dnaHash, randomHash()], \"mock-nick\"]];\n\n  constructor(protected dnaHash: AgentPubKey, protected zomes: MockedZomes) {}\n\n  async appInfo() {\n    return {\n      cell_data: this.cell_data,\n    };\n  }\n\n  async callZome(args: {\n    cap: void;\n    cell_id: CellId;\n    zome_name: string;\n    fn_name: string;\n    payload: any;\n    provenance: AgentPubKey;\n  }) {\n    return this.zomes[args.zome_name][args.fn_name](\n      args.payload,\n      args.provenance\n    );\n  }\n}\n"]}